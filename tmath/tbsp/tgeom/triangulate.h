//-----------------------------------------------------------------------------
// Copyright (C) 2002 Microsoft, All rights reserved
//-----------------------------------------------------------------------------

#ifndef     _TRIANGULATE_H_
#define     _TRIANGULATE_H_

//-----------------------------------------------------------------------------
// includes
//-----------------------------------------------------------------------------
#ifndef     _CHAIN_LIST_H_
#include    "chain_list.h"
#endif  //  _CHAIN_LIST_H_

//-----------------------------------------------------------------------------
// types
//-----------------------------------------------------------------------------
struct Triangle
{
    uInt2       a, b, c;
    Triangle (uInt2 _a, uInt2 _b, uInt2 _c) :
        a (_a), b (_b), c (_c) {}
};
typedef std::vector<Triangle>   TriangleVec;

//-----------------------------------------------------------------------------
// functions
//-----------------------------------------------------------------------------
template<class Real>
void    Triangulate (const TChainList<Real>& chainList, TChain<Real>& chainOut, TriangleVec& trianglesOut);

//-----------------------------------------------------------------------------
// inlines
//-----------------------------------------------------------------------------
#ifndef     _TRIANGULATE_INL_
#include    "triangulate.inl"
#endif  //  _TRIANGULATE_INL_

//-----------------------------------------------------------------------------

#endif  //  _TRIANGULATE_H_
