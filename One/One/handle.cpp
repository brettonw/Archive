//------------------------------------------------------------------------------
//	Copyright (C) 1997-2000 Bretton Wade
//	All Rights Reserved
//------------------------------------------------------------------------------

//--------------------------------------------------------------------------
//	includes
//--------------------------------------------------------------------------
#include	"precompile.h"
#include	"handle.h"
#include	"test.h"

//--------------------------------------------------------------------------
//	static members
//--------------------------------------------------------------------------
void*	Handle::myFreeStore = 0;

//--------------------------------------------------------------------------
//	class methods
//--------------------------------------------------------------------------
Handle::Handle
(
	void*					ptr
)
{
	myPtr = ptr;
}

//--------------------------------------------------------------------------
Handle::~Handle
(
	void
)
{
}

//--------------------------------------------------------------------------
void*
Handle::GetPtr
(
	void
) const
{
	return myPtr;
}

//--------------------------------------------------------------------------
void*
Handle::operator new 
(
	size_t 					size
)
{
	void*	ptr = myFreeStore;
	if (ptr)
		myFreeStore = *static_cast<void**> (ptr);
	else
		ptr = ::operator new (size);
	return ptr;
}

//--------------------------------------------------------------------------
void
Handle::operator delete
(
	void* 					ptr,
	size_t 					/*size*/
)
{
	*static_cast<void**> (ptr) = myFreeStore;
	myFreeStore = ptr;
}

//--------------------------------------------------------------------------
//	tests
//--------------------------------------------------------------------------
#ifdef	_RUN_TESTS
DEFINE_TEST (Handle)
{
	DO_AFTER (CountedObject);
}

//--------------------------------------------------------------------------
ON_TEST (Handle)
{
	DO_TEST_REPORT;
	Handle	handle (0);
	TEST_CONDITION (handle.GetPtr () == 0);
}
#endif

//--------------------------------------------------------------------------
