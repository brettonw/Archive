	point_3d		g_points[4];																										//	eight vertices	g_points[0] (R( 1.25), R(-0.5), R( 1.25));	g_points[1] (R( 1.25), R(-0.5), R(-1.25));	g_points[2] (R(-1.25), R(-0.5), R(-1.25));	g_points[3] (R(-1.25), R(-0.5), R( 1.25));	listptr	ground;	ground->AddToList (polyptr (g_points, 4, 0, 1, 2, 3));	world->Insert (ground, OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(1.0), R(1.0)) * RotateZ (R(-10.0)) * Translate (R(0.5), R(0.0), R(0.0))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(1.0), R(1.0)) * RotateZ (R(10.0)) * Translate (R(-0.5), R(0.0), R(0.0))), OUT, OUT);		world->Insert (Cube (Scale (R(-1.0), R(-0.5), R(-0.5))), IN, OUT);	world->Reduce ();	world->Insert (Triangle (Scale (R(0.5), R(0.5), R(1.0)) * RotateY (R(90.0)) * Translate (R(0.0), R(0.75), R(-0.75))), OUT, OUT);	world->Insert (Triangle (Scale (R(0.5), R(0.5), R(1.0)) * RotateY (R(-90.0)) * Translate (R(0.0), R(0.75), R(0.75))), OUT, OUT);	world->Insert (Cube (Scale (R(0.75), R(0.025), R(0.9)) * RotateY (R(90.0)) * Translate (R(0.0), R(-0.225), R(0.0))), OUT, OUT);	world->Insert (Cube (Scale (R(-0.4), R(-0.25), R(-0.4)) * Translate (R(0.0), R(0.5), R(0.0))), IN, OUT);	world->Reduce ();	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(0.25), R(-0.0125), R(0.0)) * RotateZ (R(-10.0)) * Translate (R(0.0), R(1.125), R(-0.2))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(-0.25), R(-0.0125), R(0.0)) * RotateZ (R(10.0)) * Translate (R(0.0), R(1.125), R(-0.2))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(0.25), R(-0.0125), R(0.0)) * RotateZ (R(-10.0)) * Translate (R(0.0), R(1.125), R(-0.1))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(-0.25), R(-0.0125), R(0.0)) * RotateZ (R(10.0)) * Translate (R(0.0), R(1.125), R(-0.1))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(0.25), R(-0.0125), R(0.0)) * RotateZ (R(-10.0)) * Translate (R(0.0), R(1.125), R(0.0))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(-0.25), R(-0.0125), R(0.0)) * RotateZ (R(10.0)) * Translate (R(0.0), R(1.125), R(0.0))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(0.25), R(-0.0125), R(0.0)) * RotateZ (R(-10.0)) * Translate (R(0.0), R(1.125), R(0.1))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(-0.25), R(-0.0125), R(0.0)) * RotateZ (R(10.0)) * Translate (R(0.0), R(1.125), R(0.1))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(0.25), R(-0.0125), R(0.0)) * RotateZ (R(-10.0)) * Translate (R(0.0), R(1.125), R(0.2))), OUT, OUT);	world->Insert (Cube (Scale (R(0.25), R(0.025), R(0.0125)) * Translate (R(-0.25), R(-0.0125), R(0.0)) * RotateZ (R(10.0)) * Translate (R(0.0), R(1.125), R(0.2))), OUT, OUT);